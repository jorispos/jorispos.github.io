{"version":3,"sources":["serviceWorker.js","modules/Title/Title.js","modules/Background/ParticleSettings.js","modules/Background/Background.js","modules/Credits/Credits.js","modules/OptionMenu/OptionMenu.js","index.js"],"names":["Boolean","window","location","hostname","match","title","react_default","a","createElement","id","className","parameters","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","retina_detect","background","particles_default","params","ParticleSettings","Credits","OptionMenu","ReactDOM","render","Background_Background","Title","modules_OptionMenu_OptionMenu","modules_Credits_Credits","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+RAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DChBN,IASeC,EATD,WACb,OACCC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QAAQC,UAAU,UACzBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,6DAAd,UACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gDAAd,sCCmEYC,EAxEf,CACEC,UAAa,CACXC,OAAU,CACRC,MAAS,GACTC,QAAW,CACTC,QAAU,EACVC,WAAc,MAGlBC,MAAS,CACPJ,MAAS,WAEXK,MAAS,CACPC,KAAQ,SACRC,OAAU,CACRC,MAAS,EACTJ,MAAS,WAEXK,QAAW,CACTC,SAAY,GAEdC,MAAS,CACPC,IAAO,iBACPJ,MAAS,IACTK,OAAU,MAGdC,QAAW,CACTd,MAAS,GACTe,QAAU,EACVC,KAAQ,CACNd,QAAU,EACVe,MAAS,EACTC,YAAe,GACfC,MAAQ,IAGZC,KAAQ,CACNpB,MAAS,EACTe,QAAU,EACVC,KAAQ,CACNd,QAAU,EACVe,MAAS,GACTI,SAAY,GACZF,MAAQ,IAGZG,YAAe,CACbpB,QAAU,EACVqB,SAAY,mBACZnB,MAAS,UACTU,QAAW,GACXN,MAAS,GAEXgB,KAAQ,CACNtB,QAAU,EACVe,MAAS,EACTQ,UAAa,OACbV,QAAU,EACVW,UAAY,EACZC,SAAY,MACZC,QAAU,EACVC,QAAW,CACT3B,QAAU,EACV4B,QAAW,IACXC,QAAW,QAIjBC,eAAiB,mBC3DJC,SANI,WAClB,OACCzC,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAW0C,OAAUC,EAAkBxC,UAAU,gBCEpCyC,SANC,WACf,OACC7C,EAAAC,EAAAC,cAAA,KAAGE,UAAY,WAAf,2BCWa0C,SAbI,WAClB,OACC9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mDACdJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAb,8BACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kCACdJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,4EAAlB,WACAJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,0EAAlB,YAEDJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,4CAAb,iBCOH2C,IAASC,OACRhD,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QACPH,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAACgD,EAAD,MACAlD,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAACkD,EAAD,OAEAC,SAASC,eAAe,SNwGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.75831fc0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nconst title = () => {\r\n\treturn (\r\n\t\t<div id='title' className='center'>\r\n\t\t\t<h1 className='f-headline tc pb0 mb0 mt3 animated bounceInRight delay-1s'>JPCode</h1>\r\n\t\t\t<h2 className='f2 tc pt0 mt0 animated bounceInLeft delay-1s'>The Future of Encryption is Here</h2>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default title;","const parameters = \r\n{\r\n  \"particles\": {\r\n    \"number\": {\r\n      \"value\": 60,\r\n      \"density\": {\r\n        \"enable\": true,\r\n        \"value_area\": 800\r\n      }\r\n    },\r\n    \"color\": {\r\n      \"value\": \"#ffffff\"\r\n    },\r\n    \"shape\": {\r\n      \"type\": \"circle\",\r\n      \"stroke\": {\r\n        \"width\": 0,\r\n        \"color\": \"#000000\"\r\n      },\r\n      \"polygon\": {\r\n        \"nb_sides\": 5\r\n      },\r\n      \"image\": {\r\n        \"src\": \"img/github.svg\",\r\n        \"width\": 100,\r\n        \"height\": 100\r\n      }\r\n    },\r\n    \"opacity\": {\r\n      \"value\": 0.5,\r\n      \"random\": false,\r\n      \"anim\": {\r\n        \"enable\": false,\r\n        \"speed\": 1,\r\n        \"opacity_min\": 0.1,\r\n        \"sync\": false\r\n      }\r\n    },\r\n    \"size\": {\r\n      \"value\": 3,\r\n      \"random\": true,\r\n      \"anim\": {\r\n        \"enable\": false,\r\n        \"speed\": 40,\r\n        \"size_min\": 0.1,\r\n        \"sync\": false\r\n      }\r\n    },\r\n    \"line_linked\": {\r\n      \"enable\": true,\r\n      \"distance\": 110.48066982851817,\r\n      \"color\": \"#ffffff\",\r\n      \"opacity\": 0.4,\r\n      \"width\": 1\r\n    },\r\n    \"move\": {\r\n      \"enable\": true,\r\n      \"speed\": 3,\r\n      \"direction\": \"none\",\r\n      \"random\": false,\r\n      \"straight\": false,\r\n      \"out_mode\": \"out\",\r\n      \"bounce\": false,\r\n      \"attract\": {\r\n        \"enable\": false,\r\n        \"rotateX\": 600,\r\n        \"rotateY\": 1200\r\n      }\r\n    }\r\n  },\r\n  \"retina_detect\": false\r\n}\r\n\r\nexport default parameters;","import React from 'react';\r\nimport ParticleSettings from './ParticleSettings.js'\r\nimport Particles from 'react-particles-js';\r\nimport './Background.css';\r\n\r\nconst background = () => {\r\n\treturn (\r\n\t\t<Particles params = {ParticleSettings} className='particles'/>\r\n\t);\r\n}\r\n\r\nexport default background;","import React from 'react';\r\nimport './Credits.css';\r\n\r\nconst Credits = () => {\r\n\treturn(\r\n\t\t<p className = 'credits'>Made by Joris Postmus</p>\r\n\t);\r\n}\r\n\r\nexport default Credits;","import React from 'react';\r\nimport './OptionMenu.css';\r\n\r\nconst OptionMenu = () => {\r\n\treturn (\r\n\t\t<div className='animated bounceInUp delay-2s center optionPanel'>\r\n\t\t\t<p className='tc f2 mb4'>What would you like to do?</p>\r\n\t\t\t<div className='center mw6 flex justify-center'>\r\n\t\t\t\t<button className='w-50 ba bw1 b--black grow mh1 f4 link pv3 pr1 dib black bg-green pointer'>Encrypt</button>\r\n\t\t\t\t<button className='w-50 ba bw1 b--black grow mh1 f4 link pv3 pl1 dib black bg-red pointer'>Decrypt</button>\r\n\t\t\t</div>\r\n\t\t\t<p className='tc f3 pointer dark-gray grow w-30 center'>Learn More</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default OptionMenu;","//Importing Libraries\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport './fonts.css'\nimport 'animate.css'\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n//Importing Modules\nimport Title from './modules/Title/Title.js';\nimport Background from './modules/Background/Background.js';\nimport Panel from './modules/Panel/Panel.js';\nimport Credits from './modules/Credits/Credits.js';\nimport OptionMenu from './modules/OptionMenu/OptionMenu.js';\n\n//Rendering everything\nReactDOM.render(\n\t<div id='view'>\n\t\t<Background />\n\t\t<Title />\n\t\t<OptionMenu />\n\t\t<Credits />\n\t</div>\n, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}